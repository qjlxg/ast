name: 筛选

on:
  schedule:
    # 注意：GitHub Actions 的 cron 时间基于 UTC。
    # '30 7 * * 1-5' 是 UTC 时间 7:30，对应北京时间 15:30 (UTC+8)。
    # 保持不变，它只控制运行时间，不影响脚本内部的时间戳。
    - cron: '30 7 * * 1-5'
  push:
    paths:
      - 'stock_selector.py'
      - '.github/workflows/screen_stocks.yml'
  workflow_dispatch:  # 支持手动触发

jobs:
  screen:
    runs-on: ubuntu-latest
    
    # === 关键修改：在 Job 级别设置 TZ 环境变量 ===
    env:
      # 设置时区为上海，确保 Python 脚本中的 datetime.now() 使用此时间。
      TZ: Asia/Shanghai
    
    steps:
    - uses: actions/checkout@v4 
    
    - name: Clear cache to ensure latest script
      run: |
        rm -rf $GITHUB_WORKSPACE/.cache
        
    - name: Set up Python
      uses: actions/setup-python@v5 
      with:
        python-version: '3.9'
        
    - name: Install Chinese fonts for mplfinance
      run: |
        sudo apt-get update
        sudo apt-get install -y fonts-wqy-zenhei
        
    - name: Install dependencies (Akshare, Pandas, mplfinance, etc.)
      run: |
        python -m pip install --upgrade pip
        pip install --user pandas numpy mplfinance nest-asyncio akshare
    
    - name: Run screening script (using Asia/Shanghai time)
      # 脚本现在将在 TZ 环境变量的作用下运行
      run: |
        python stock_selector.py
        
    - name: Commit results
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 1. 添加结果根目录 (包含所有年月子目录和带时间戳的文件)
        if [ -d "screening_results" ]; then
          git add screening_results
        fi
        
        # 2. 添加股票名称缓存文件（在根目录下）
        if [ -f "stock_names_cache.csv" ]; then
          git add stock_names_cache.csv
        fi
        
        # 3. 检查是否有文件变动
        if ! git diff --cached --exit-code; then
          git commit -m "Auto Screen: Save screening results to date-time folder (Asia/Shanghai Time)."
          git push
        else
          echo "No new changes to commit. Screening results and cache are the same."
        fi
