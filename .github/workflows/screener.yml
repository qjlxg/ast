name: Daily Stock Screener -3

on:
  # 1. 允许手动触发工作流
  workflow_dispatch:
  
  # 2. 自动在代码变更时触发，用于开发和测试
  push:
    branches:
      - main     # 假设主分支为 main
      - master   # 兼容 master 分支
    paths:
      - 'screener.py'
      - '.github/workflows/screener.yml'
      
  # 3. 每日定时运行 (对应 UTC 09:00，即上海时间 17:00 CST)
  schedule:
    - cron: '*/130 * * * *'

jobs:
  run_screener:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # 【重要优化】确保拉取完整历史记录，有助于后续 git 操作
        with:
          fetch-depth: 0 
          
      # 【新增步骤】获取并设置当前日期为环境变量，格式为 YYYYMMDD
      - name: Set Today's Date Variable
        id: date
        run: echo "TODAY_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          # Install required libraries: pandas, numpy
          python -m pip install --upgrade pip
          pip install pandas numpy

      - name: Run Stock Screener Script
        # 不再向 Python 脚本传入日期参数，让脚本自动获取日期
        run: python screener.py 
      
      # ==========================================================
      # 【核心修复】解决推送被拒绝的问题 (non-fast-forward issue)
      # ==========================================================
      - name: Pull and Rebase before Commit
        # 必须在 git-auto-commit-action 之前执行，用于解决定时任务导致的冲突
        run: |
          # 必须先配置提交者信息
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # 拉取远程最新代码并 rebase（变基），将本地提交放在远程提交之后，解决非快进冲突
          git pull --rebase origin main
          
      - name: Commit and Push results
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          # 提交当天生成的筛选结果文件
          file_pattern: screened_signals/${{ env.TODAY_DATE }}/*.csv
          commit_message: "🤖 Daily Stock Screening Results for ${{ env.TODAY_DATE }}"
          skip_dirty_check: true
          # 【修复点 1】移除无效的 'force_push: true'
