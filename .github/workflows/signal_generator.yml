name: '📊 Daily Buy Signal Generator'

# 1. 触发机制
on:
  push:
    branches:
      - main
      - master
    paths:
      - 'd1_signal.py' 
      - '.github/workflows/signal_generator.yml'
  workflow_dispatch: # 允许手动运行
  schedule:
    # 每天北京时间 16:00 运行（市场收盘后）
    - cron: '0 8 * * *'

# 2. 全局配置
env:
  PYTHON_VERSION: '3.10'
  SCRIPT_NAME: 'd1_signal.py'
  DATA_DIR: 'stock_data'
  TZ: 'Asia/Shanghai' 
  
jobs:
  generate_and_push_signals:
    runs-on: ubuntu-latest
    
    steps:
      # 1. 检出代码
      - name: ⚙️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      # 2. 设置 Python 环境
      - name: 🐍 Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # 3. 🔧 安装依赖（修复 TA-Lib 安装问题）
      - name: 🛠️ Install TA-Lib and Python packages
        run: |
          # 更新并安装编译工具
          sudo apt-get update
          sudo apt-get install -y build-essential wget
          
          # 从可靠的镜像下载 TA-Lib
          wget https://downloads.sourceforge.net/project/ta-lib/ta-lib/0.4.0/ta-lib-0.4.0-src.tar.gz
          tar -xzf ta-lib-0.4.0-src.tar.gz
          
          # 编译和安装 TA-Lib
          cd ta-lib
          ./configure --prefix=/usr
          make
          sudo make install
          cd ..
          
          # 安装 Python 依赖
          pip install pandas numpy TA-Lib

      # 4. 准备数据环境
      - name: 📂 Check Data Directory
        run: |
          if [ ! -d "${{ env.DATA_DIR }}" ]; then
            echo "::warning::Data directory '${{ env.DATA_DIR }}' not found. Creating it."
            mkdir -p ${{ env.DATA_DIR }}
          else
            echo "Data directory found with $(ls -1 ${{ env.DATA_DIR }} | wc -l) files"
          fi
          
      # 5. 生成信号
      - name: 🚀 Run Signal Generator Script
        id: run_script
        run: |
          # 设置时区和日期变量
          export TZ='${{ env.TZ }}'
          TIMESTAMP=$(date +'%Y%m%d_%H%M%S')
          CURRENT_DATE=$(date +'%Y-%m-%d')
          YEAR_MONTH=$(date +'%Y/%m')
          
          echo "Running signal generation script..."
          echo "Current date: $CURRENT_DATE"
          echo "Timestamp: $TIMESTAMP"
          
          # 运行脚本并捕获输出
          python ${{ env.SCRIPT_NAME }} 2>&1 | tee script_output.log
          
          # 检查脚本执行状态
          if [ ${PIPESTATUS[0]} -eq 0 ]; then
            echo "Script executed successfully"
          else
            echo "Script execution failed"
            exit 1
          fi
          
          # 创建结果文件
          RESULT_FILE="signals_${TIMESTAMP}.log"
          echo "Signal Generation Results" > $RESULT_FILE
          echo "=========================" >> $RESULT_FILE
          echo "Generated on: $CURRENT_DATE $TIMESTAMP" >> $RESULT_FILE
          echo "" >> $RESULT_FILE
          cat script_output.log >> $RESULT_FILE
          
          # 设置环境变量供后续步骤使用
          echo "RESULT_FILE=$RESULT_FILE" >> $GITHUB_ENV
          echo "TARGET_DIR=$YEAR_MONTH" >> $GITHUB_ENV
          echo "CURRENT_DATE=$CURRENT_DATE" >> $GITHUB_ENV

      # 6. 推送结果到仓库
      - name: 📤 Push Results to Repository
        run: |
          # 配置 Git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # 创建目标目录并移动结果文件
          mkdir -p "${{ env.TARGET_DIR }}"
          mv "${{ env.RESULT_FILE }}" "${{ env.TARGET_DIR }}/"
          
          # 提交更改
          git add "${{ env.TARGET_DIR }}/${{ env.RESULT_FILE }}"
          git commit -m "feat(signals): Add buy signals for ${{ env.CURRENT_DATE }} [skip ci]" || echo "No changes to commit"
          git push